/* 
 * App Center Client
 *
 * Microsoft Visual Studio App Center API
 *
 * OpenAPI spec version: v0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ExportApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ExportApiTests
    {
        private ExportApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ExportApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ExportApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ExportApi
            //Assert.IsInstanceOfType(typeof(ExportApi), instance, "instance is a ExportApi");
        }

        /// <summary>
        /// Test ExportConfigurationsCreate
        /// </summary>
        [Test]
        public void ExportConfigurationsCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AppNameExportConfigurationsBody body = null;
            //string ownerName = null;
            //string appName = null;
            //var response = instance.ExportConfigurationsCreate(body, ownerName, appName);
            //Assert.IsInstanceOf<InlineResponse20036> (response, "response is InlineResponse20036");
        }
        /// <summary>
        /// Test ExportConfigurationsDelete
        /// </summary>
        [Test]
        public void ExportConfigurationsDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string exportConfigurationId = null;
            //string ownerName = null;
            //string appName = null;
            //instance.ExportConfigurationsDelete(exportConfigurationId, ownerName, appName);
            
        }
        /// <summary>
        /// Test ExportConfigurationsDisable
        /// </summary>
        [Test]
        public void ExportConfigurationsDisableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string exportConfigurationId = null;
            //string ownerName = null;
            //string appName = null;
            //instance.ExportConfigurationsDisable(exportConfigurationId, ownerName, appName);
            
        }
        /// <summary>
        /// Test ExportConfigurationsEnable
        /// </summary>
        [Test]
        public void ExportConfigurationsEnableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string exportConfigurationId = null;
            //string ownerName = null;
            //string appName = null;
            //instance.ExportConfigurationsEnable(exportConfigurationId, ownerName, appName);
            
        }
        /// <summary>
        /// Test ExportConfigurationsGet
        /// </summary>
        [Test]
        public void ExportConfigurationsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string exportConfigurationId = null;
            //string ownerName = null;
            //string appName = null;
            //var response = instance.ExportConfigurationsGet(exportConfigurationId, ownerName, appName);
            //Assert.IsInstanceOf<InlineResponse20036> (response, "response is InlineResponse20036");
        }
        /// <summary>
        /// Test ExportConfigurationsList
        /// </summary>
        [Test]
        public void ExportConfigurationsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string ownerName = null;
            //string appName = null;
            //var response = instance.ExportConfigurationsList(ownerName, appName);
            //Assert.IsInstanceOf<InlineResponse20037> (response, "response is InlineResponse20037");
        }
        /// <summary>
        /// Test ExportConfigurationsPartialUpdate
        /// </summary>
        [Test]
        public void ExportConfigurationsPartialUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ExportConfigurationsExportConfigurationIdBody body = null;
            //string exportConfigurationId = null;
            //string ownerName = null;
            //string appName = null;
            //var response = instance.ExportConfigurationsPartialUpdate(body, exportConfigurationId, ownerName, appName);
            //Assert.IsInstanceOf<InlineResponse20036> (response, "response is InlineResponse20036");
        }
    }

}
