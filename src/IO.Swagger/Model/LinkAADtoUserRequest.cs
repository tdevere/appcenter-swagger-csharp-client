/* 
 * App Center Client
 *
 * Microsoft Visual Studio App Center API
 *
 * OpenAPI spec version: v0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// LinkAADtoUserRequest
    /// </summary>
    [DataContract]
        public partial class LinkAADtoUserRequest :  IEquatable<LinkAADtoUserRequest>, IValidatableObject
    {
        /// <summary>
        /// The role of the user to be added
        /// </summary>
        /// <value>The role of the user to be added</value>
        [JsonConverter(typeof(StringEnumConverter))]
                public enum RoleEnum
        {
            /// <summary>
            /// Enum Admin for value: admin
            /// </summary>
            [EnumMember(Value = "admin")]
            Admin = 1,
            /// <summary>
            /// Enum Collaborator for value: collaborator
            /// </summary>
            [EnumMember(Value = "collaborator")]
            Collaborator = 2,
            /// <summary>
            /// Enum Member for value: member
            /// </summary>
            [EnumMember(Value = "member")]
            Member = 3        }
        /// <summary>
        /// The role of the user to be added
        /// </summary>
        /// <value>The role of the user to be added</value>
        [DataMember(Name="role", EmitDefaultValue=false)]
        public RoleEnum? Role { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="LinkAADtoUserRequest" /> class.
        /// </summary>
        /// <param name="aadTenantIds">An array of AAD tenant data needed to link the user to the tenants (required).</param>
        /// <param name="role">The role of the user to be added.</param>
        public LinkAADtoUserRequest(List<Guid?> aadTenantIds = default(List<Guid?>), RoleEnum? role = default(RoleEnum?))
        {
            // to ensure "aadTenantIds" is required (not null)
            if (aadTenantIds == null)
            {
                throw new InvalidDataException("aadTenantIds is a required property for LinkAADtoUserRequest and cannot be null");
            }
            else
            {
                this.AadTenantIds = aadTenantIds;
            }
            this.Role = role;
        }
        
        /// <summary>
        /// An array of AAD tenant data needed to link the user to the tenants
        /// </summary>
        /// <value>An array of AAD tenant data needed to link the user to the tenants</value>
        [DataMember(Name="aad_tenant_ids", EmitDefaultValue=false)]
        public List<Guid?> AadTenantIds { get; set; }


        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LinkAADtoUserRequest {\n");
            sb.Append("  AadTenantIds: ").Append(AadTenantIds).Append("\n");
            sb.Append("  Role: ").Append(Role).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LinkAADtoUserRequest);
        }

        /// <summary>
        /// Returns true if LinkAADtoUserRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of LinkAADtoUserRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LinkAADtoUserRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AadTenantIds == input.AadTenantIds ||
                    this.AadTenantIds != null &&
                    input.AadTenantIds != null &&
                    this.AadTenantIds.SequenceEqual(input.AadTenantIds)
                ) && 
                (
                    this.Role == input.Role ||
                    (this.Role != null &&
                    this.Role.Equals(input.Role))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AadTenantIds != null)
                    hashCode = hashCode * 59 + this.AadTenantIds.GetHashCode();
                if (this.Role != null)
                    hashCode = hashCode * 59 + this.Role.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
