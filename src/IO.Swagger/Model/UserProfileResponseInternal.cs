/* 
 * App Center Client
 *
 * Microsoft Visual Studio App Center API
 *
 * OpenAPI spec version: v0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// UserProfileResponseInternal
    /// </summary>
    [DataContract]
        public partial class UserProfileResponseInternal :  IEquatable<UserProfileResponseInternal>, IValidatableObject
    {
        /// <summary>
        /// The new admin_role
        /// </summary>
        /// <value>The new admin_role</value>
        [JsonConverter(typeof(StringEnumConverter))]
                public enum AdminRoleEnum
        {
            /// <summary>
            /// Enum SuperAdmin for value: superAdmin
            /// </summary>
            [EnumMember(Value = "superAdmin")]
            SuperAdmin = 1,
            /// <summary>
            /// Enum Admin for value: admin
            /// </summary>
            [EnumMember(Value = "admin")]
            Admin = 2,
            /// <summary>
            /// Enum DevOps for value: devOps
            /// </summary>
            [EnumMember(Value = "devOps")]
            DevOps = 3,
            /// <summary>
            /// Enum CustomerSupport for value: customerSupport
            /// </summary>
            [EnumMember(Value = "customerSupport")]
            CustomerSupport = 4,
            /// <summary>
            /// Enum NotAdmin for value: notAdmin
            /// </summary>
            [EnumMember(Value = "notAdmin")]
            NotAdmin = 5        }
        /// <summary>
        /// The new admin_role
        /// </summary>
        /// <value>The new admin_role</value>
        [DataMember(Name="admin_role", EmitDefaultValue=false)]
        public AdminRoleEnum? AdminRole { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UserProfileResponseInternal" /> class.
        /// </summary>
        /// <param name="featureFlags">The feature flags that are enabled for this app.</param>
        /// <param name="adminRole">The new admin_role.</param>
        /// <param name="settings">settings.</param>
        public UserProfileResponseInternal(List<string> featureFlags = default(List<string>), AdminRoleEnum? adminRole = default(AdminRoleEnum?), UserProfileResponseInternalSettings settings = default(UserProfileResponseInternalSettings))
        {
            this.FeatureFlags = featureFlags;
            this.AdminRole = adminRole;
            this.Settings = settings;
        }
        
        /// <summary>
        /// The feature flags that are enabled for this app
        /// </summary>
        /// <value>The feature flags that are enabled for this app</value>
        [DataMember(Name="feature_flags", EmitDefaultValue=false)]
        public List<string> FeatureFlags { get; set; }


        /// <summary>
        /// Gets or Sets Settings
        /// </summary>
        [DataMember(Name="settings", EmitDefaultValue=false)]
        public UserProfileResponseInternalSettings Settings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UserProfileResponseInternal {\n");
            sb.Append("  FeatureFlags: ").Append(FeatureFlags).Append("\n");
            sb.Append("  AdminRole: ").Append(AdminRole).Append("\n");
            sb.Append("  Settings: ").Append(Settings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UserProfileResponseInternal);
        }

        /// <summary>
        /// Returns true if UserProfileResponseInternal instances are equal
        /// </summary>
        /// <param name="input">Instance of UserProfileResponseInternal to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UserProfileResponseInternal input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.FeatureFlags == input.FeatureFlags ||
                    this.FeatureFlags != null &&
                    input.FeatureFlags != null &&
                    this.FeatureFlags.SequenceEqual(input.FeatureFlags)
                ) && 
                (
                    this.AdminRole == input.AdminRole ||
                    (this.AdminRole != null &&
                    this.AdminRole.Equals(input.AdminRole))
                ) && 
                (
                    this.Settings == input.Settings ||
                    (this.Settings != null &&
                    this.Settings.Equals(input.Settings))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.FeatureFlags != null)
                    hashCode = hashCode * 59 + this.FeatureFlags.GetHashCode();
                if (this.AdminRole != null)
                    hashCode = hashCode * 59 + this.AdminRole.GetHashCode();
                if (this.Settings != null)
                    hashCode = hashCode * 59 + this.Settings.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
