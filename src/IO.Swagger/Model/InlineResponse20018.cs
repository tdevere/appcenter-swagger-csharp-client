/* 
 * App Center Client
 *
 * Microsoft Visual Studio App Center API
 *
 * OpenAPI spec version: v0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponse20018
    /// </summary>
    [DataContract]
        public partial class InlineResponse20018 :  IEquatable<InlineResponse20018>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse20018" /> class.
        /// </summary>
        /// <param name="appVersionId">appVersionId (required).</param>
        /// <param name="appId">appId (required).</param>
        /// <param name="displayName">displayName (required).</param>
        /// <param name="appVersion">appVersion (required).</param>
        /// <param name="buildNumber">buildNumber.</param>
        public InlineResponse20018(string appVersionId = default(string), string appId = default(string), string displayName = default(string), string appVersion = default(string), string buildNumber = default(string))
        {
            // to ensure "appVersionId" is required (not null)
            if (appVersionId == null)
            {
                throw new InvalidDataException("appVersionId is a required property for InlineResponse20018 and cannot be null");
            }
            else
            {
                this.AppVersionId = appVersionId;
            }
            // to ensure "appId" is required (not null)
            if (appId == null)
            {
                throw new InvalidDataException("appId is a required property for InlineResponse20018 and cannot be null");
            }
            else
            {
                this.AppId = appId;
            }
            // to ensure "displayName" is required (not null)
            if (displayName == null)
            {
                throw new InvalidDataException("displayName is a required property for InlineResponse20018 and cannot be null");
            }
            else
            {
                this.DisplayName = displayName;
            }
            // to ensure "appVersion" is required (not null)
            if (appVersion == null)
            {
                throw new InvalidDataException("appVersion is a required property for InlineResponse20018 and cannot be null");
            }
            else
            {
                this.AppVersion = appVersion;
            }
            this.BuildNumber = buildNumber;
        }
        
        /// <summary>
        /// Gets or Sets AppVersionId
        /// </summary>
        [DataMember(Name="app_version_id", EmitDefaultValue=false)]
        public string AppVersionId { get; set; }

        /// <summary>
        /// Gets or Sets AppId
        /// </summary>
        [DataMember(Name="app_id", EmitDefaultValue=false)]
        public string AppId { get; set; }

        /// <summary>
        /// Gets or Sets DisplayName
        /// </summary>
        [DataMember(Name="display_name", EmitDefaultValue=false)]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or Sets AppVersion
        /// </summary>
        [DataMember(Name="app_version", EmitDefaultValue=false)]
        public string AppVersion { get; set; }

        /// <summary>
        /// Gets or Sets BuildNumber
        /// </summary>
        [DataMember(Name="build_number", EmitDefaultValue=false)]
        public string BuildNumber { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse20018 {\n");
            sb.Append("  AppVersionId: ").Append(AppVersionId).Append("\n");
            sb.Append("  AppId: ").Append(AppId).Append("\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  AppVersion: ").Append(AppVersion).Append("\n");
            sb.Append("  BuildNumber: ").Append(BuildNumber).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse20018);
        }

        /// <summary>
        /// Returns true if InlineResponse20018 instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse20018 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse20018 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AppVersionId == input.AppVersionId ||
                    (this.AppVersionId != null &&
                    this.AppVersionId.Equals(input.AppVersionId))
                ) && 
                (
                    this.AppId == input.AppId ||
                    (this.AppId != null &&
                    this.AppId.Equals(input.AppId))
                ) && 
                (
                    this.DisplayName == input.DisplayName ||
                    (this.DisplayName != null &&
                    this.DisplayName.Equals(input.DisplayName))
                ) && 
                (
                    this.AppVersion == input.AppVersion ||
                    (this.AppVersion != null &&
                    this.AppVersion.Equals(input.AppVersion))
                ) && 
                (
                    this.BuildNumber == input.BuildNumber ||
                    (this.BuildNumber != null &&
                    this.BuildNumber.Equals(input.BuildNumber))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AppVersionId != null)
                    hashCode = hashCode * 59 + this.AppVersionId.GetHashCode();
                if (this.AppId != null)
                    hashCode = hashCode * 59 + this.AppId.GetHashCode();
                if (this.DisplayName != null)
                    hashCode = hashCode * 59 + this.DisplayName.GetHashCode();
                if (this.AppVersion != null)
                    hashCode = hashCode * 59 + this.AppVersion.GetHashCode();
                if (this.BuildNumber != null)
                    hashCode = hashCode * 59 + this.BuildNumber.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
