/* 
 * App Center Client
 *
 * Microsoft Visual Studio App Center API
 *
 * OpenAPI spec version: v0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// AppMembershipsValidationResponse
    /// </summary>
    [DataContract]
        public partial class AppMembershipsValidationResponse :  IEquatable<AppMembershipsValidationResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AppMembershipsValidationResponse" /> class.
        /// </summary>
        /// <param name="excessAppMemberships">excessAppMemberships.</param>
        /// <param name="appUsersWithMissingMemberships">appUsersWithMissingMemberships.</param>
        /// <param name="distributionGroupUsersWithMissingMemberships">distributionGroupUsersWithMissingMemberships.</param>
        /// <param name="organizationAdminsWithMissingMemberships">organizationAdminsWithMissingMemberships.</param>
        public AppMembershipsValidationResponse(AppMembershipsValidationResponseExcessAppMemberships excessAppMemberships = default(AppMembershipsValidationResponseExcessAppMemberships), List<AppMembershipsValidationResponseAppUsersWithMissingMemberships> appUsersWithMissingMemberships = default(List<AppMembershipsValidationResponseAppUsersWithMissingMemberships>), List<AppMembershipsValidationResponseDistributionGroupUsersWithMissingMemberships> distributionGroupUsersWithMissingMemberships = default(List<AppMembershipsValidationResponseDistributionGroupUsersWithMissingMemberships>), List<AppMembershipsValidationResponseOrganizationAdminsWithMissingMemberships> organizationAdminsWithMissingMemberships = default(List<AppMembershipsValidationResponseOrganizationAdminsWithMissingMemberships>))
        {
            this.ExcessAppMemberships = excessAppMemberships;
            this.AppUsersWithMissingMemberships = appUsersWithMissingMemberships;
            this.DistributionGroupUsersWithMissingMemberships = distributionGroupUsersWithMissingMemberships;
            this.OrganizationAdminsWithMissingMemberships = organizationAdminsWithMissingMemberships;
        }
        
        /// <summary>
        /// Gets or Sets ExcessAppMemberships
        /// </summary>
        [DataMember(Name="excess_app_memberships", EmitDefaultValue=false)]
        public AppMembershipsValidationResponseExcessAppMemberships ExcessAppMemberships { get; set; }

        /// <summary>
        /// Gets or Sets AppUsersWithMissingMemberships
        /// </summary>
        [DataMember(Name="app_users_with_missing_memberships", EmitDefaultValue=false)]
        public List<AppMembershipsValidationResponseAppUsersWithMissingMemberships> AppUsersWithMissingMemberships { get; set; }

        /// <summary>
        /// Gets or Sets DistributionGroupUsersWithMissingMemberships
        /// </summary>
        [DataMember(Name="distribution_group_users_with_missing_memberships", EmitDefaultValue=false)]
        public List<AppMembershipsValidationResponseDistributionGroupUsersWithMissingMemberships> DistributionGroupUsersWithMissingMemberships { get; set; }

        /// <summary>
        /// Gets or Sets OrganizationAdminsWithMissingMemberships
        /// </summary>
        [DataMember(Name="organization_admins_with_missing_memberships", EmitDefaultValue=false)]
        public List<AppMembershipsValidationResponseOrganizationAdminsWithMissingMemberships> OrganizationAdminsWithMissingMemberships { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AppMembershipsValidationResponse {\n");
            sb.Append("  ExcessAppMemberships: ").Append(ExcessAppMemberships).Append("\n");
            sb.Append("  AppUsersWithMissingMemberships: ").Append(AppUsersWithMissingMemberships).Append("\n");
            sb.Append("  DistributionGroupUsersWithMissingMemberships: ").Append(DistributionGroupUsersWithMissingMemberships).Append("\n");
            sb.Append("  OrganizationAdminsWithMissingMemberships: ").Append(OrganizationAdminsWithMissingMemberships).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AppMembershipsValidationResponse);
        }

        /// <summary>
        /// Returns true if AppMembershipsValidationResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of AppMembershipsValidationResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AppMembershipsValidationResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ExcessAppMemberships == input.ExcessAppMemberships ||
                    (this.ExcessAppMemberships != null &&
                    this.ExcessAppMemberships.Equals(input.ExcessAppMemberships))
                ) && 
                (
                    this.AppUsersWithMissingMemberships == input.AppUsersWithMissingMemberships ||
                    this.AppUsersWithMissingMemberships != null &&
                    input.AppUsersWithMissingMemberships != null &&
                    this.AppUsersWithMissingMemberships.SequenceEqual(input.AppUsersWithMissingMemberships)
                ) && 
                (
                    this.DistributionGroupUsersWithMissingMemberships == input.DistributionGroupUsersWithMissingMemberships ||
                    this.DistributionGroupUsersWithMissingMemberships != null &&
                    input.DistributionGroupUsersWithMissingMemberships != null &&
                    this.DistributionGroupUsersWithMissingMemberships.SequenceEqual(input.DistributionGroupUsersWithMissingMemberships)
                ) && 
                (
                    this.OrganizationAdminsWithMissingMemberships == input.OrganizationAdminsWithMissingMemberships ||
                    this.OrganizationAdminsWithMissingMemberships != null &&
                    input.OrganizationAdminsWithMissingMemberships != null &&
                    this.OrganizationAdminsWithMissingMemberships.SequenceEqual(input.OrganizationAdminsWithMissingMemberships)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ExcessAppMemberships != null)
                    hashCode = hashCode * 59 + this.ExcessAppMemberships.GetHashCode();
                if (this.AppUsersWithMissingMemberships != null)
                    hashCode = hashCode * 59 + this.AppUsersWithMissingMemberships.GetHashCode();
                if (this.DistributionGroupUsersWithMissingMemberships != null)
                    hashCode = hashCode * 59 + this.DistributionGroupUsersWithMissingMemberships.GetHashCode();
                if (this.OrganizationAdminsWithMissingMemberships != null)
                    hashCode = hashCode * 59 + this.OrganizationAdminsWithMissingMemberships.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
