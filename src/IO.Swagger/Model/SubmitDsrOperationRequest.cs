/* 
 * App Center Client
 *
 * Microsoft Visual Studio App Center API
 *
 * OpenAPI spec version: v0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// SubmitDsrOperationRequest
    /// </summary>
    [DataContract]
        public partial class SubmitDsrOperationRequest :  IEquatable<SubmitDsrOperationRequest>, IValidatableObject
    {
        /// <summary>
        /// Defines Request
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
                public enum RequestEnum
        {
            /// <summary>
            /// Enum Delete for value: Delete
            /// </summary>
            [EnumMember(Value = "Delete")]
            Delete = 1,
            /// <summary>
            /// Enum Purge for value: Purge
            /// </summary>
            [EnumMember(Value = "Purge")]
            Purge = 2,
            /// <summary>
            /// Enum UndoDelete for value: UndoDelete
            /// </summary>
            [EnumMember(Value = "UndoDelete")]
            UndoDelete = 3,
            /// <summary>
            /// Enum Export for value: Export
            /// </summary>
            [EnumMember(Value = "Export")]
            Export = 4        }
        /// <summary>
        /// Gets or Sets Request
        /// </summary>
        [DataMember(Name="request", EmitDefaultValue=false)]
        public RequestEnum? Request { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="SubmitDsrOperationRequest" /> class.
        /// </summary>
        /// <param name="request">request.</param>
        /// <param name="accountId">accountId.</param>
        /// <param name="appId">appId.</param>
        /// <param name="operationId">The DSR operation ID provided by the GDPR coordinator. Used for tracking only..</param>
        /// <param name="requestId">Request ID provided by the GDPR coordinator. Used for tracking..</param>
        public SubmitDsrOperationRequest(RequestEnum? request = default(RequestEnum?), string accountId = default(string), string appId = default(string), string operationId = default(string), string requestId = default(string))
        {
            this.Request = request;
            this.AccountId = accountId;
            this.AppId = appId;
            this.OperationId = operationId;
            this.RequestId = requestId;
        }
        

        /// <summary>
        /// Gets or Sets AccountId
        /// </summary>
        [DataMember(Name="accountId", EmitDefaultValue=false)]
        public string AccountId { get; set; }

        /// <summary>
        /// Gets or Sets AppId
        /// </summary>
        [DataMember(Name="appId", EmitDefaultValue=false)]
        public string AppId { get; set; }

        /// <summary>
        /// The DSR operation ID provided by the GDPR coordinator. Used for tracking only.
        /// </summary>
        /// <value>The DSR operation ID provided by the GDPR coordinator. Used for tracking only.</value>
        [DataMember(Name="operationId", EmitDefaultValue=false)]
        public string OperationId { get; set; }

        /// <summary>
        /// Request ID provided by the GDPR coordinator. Used for tracking.
        /// </summary>
        /// <value>Request ID provided by the GDPR coordinator. Used for tracking.</value>
        [DataMember(Name="requestId", EmitDefaultValue=false)]
        public string RequestId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SubmitDsrOperationRequest {\n");
            sb.Append("  Request: ").Append(Request).Append("\n");
            sb.Append("  AccountId: ").Append(AccountId).Append("\n");
            sb.Append("  AppId: ").Append(AppId).Append("\n");
            sb.Append("  OperationId: ").Append(OperationId).Append("\n");
            sb.Append("  RequestId: ").Append(RequestId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SubmitDsrOperationRequest);
        }

        /// <summary>
        /// Returns true if SubmitDsrOperationRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of SubmitDsrOperationRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SubmitDsrOperationRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Request == input.Request ||
                    (this.Request != null &&
                    this.Request.Equals(input.Request))
                ) && 
                (
                    this.AccountId == input.AccountId ||
                    (this.AccountId != null &&
                    this.AccountId.Equals(input.AccountId))
                ) && 
                (
                    this.AppId == input.AppId ||
                    (this.AppId != null &&
                    this.AppId.Equals(input.AppId))
                ) && 
                (
                    this.OperationId == input.OperationId ||
                    (this.OperationId != null &&
                    this.OperationId.Equals(input.OperationId))
                ) && 
                (
                    this.RequestId == input.RequestId ||
                    (this.RequestId != null &&
                    this.RequestId.Equals(input.RequestId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Request != null)
                    hashCode = hashCode * 59 + this.Request.GetHashCode();
                if (this.AccountId != null)
                    hashCode = hashCode * 59 + this.AccountId.GetHashCode();
                if (this.AppId != null)
                    hashCode = hashCode * 59 + this.AppId.GetHashCode();
                if (this.OperationId != null)
                    hashCode = hashCode * 59 + this.OperationId.GetHashCode();
                if (this.RequestId != null)
                    hashCode = hashCode * 59 + this.RequestId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
