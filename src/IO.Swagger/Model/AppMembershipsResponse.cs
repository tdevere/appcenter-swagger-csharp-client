/* 
 * App Center Client
 *
 * Microsoft Visual Studio App Center API
 *
 * OpenAPI spec version: v0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// AppMembershipsResponse
    /// </summary>
    [DataContract]
        public partial class AppMembershipsResponse :  IEquatable<AppMembershipsResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AppMembershipsResponse" /> class.
        /// </summary>
        /// <param name="appOrigin">The app&#x27;s origin.</param>
        /// <param name="memberships">An array of all ways a user has access to the app, based on the app_memberships table..</param>
        public AppMembershipsResponse(string appOrigin = default(string), List<AppMembershipsResponseMemberships> memberships = default(List<AppMembershipsResponseMemberships>))
        {
            this.AppOrigin = appOrigin;
            this.Memberships = memberships;
        }
        
        /// <summary>
        /// The app&#x27;s origin
        /// </summary>
        /// <value>The app&#x27;s origin</value>
        [DataMember(Name="app_origin", EmitDefaultValue=false)]
        public string AppOrigin { get; set; }

        /// <summary>
        /// An array of all ways a user has access to the app, based on the app_memberships table.
        /// </summary>
        /// <value>An array of all ways a user has access to the app, based on the app_memberships table.</value>
        [DataMember(Name="memberships", EmitDefaultValue=false)]
        public List<AppMembershipsResponseMemberships> Memberships { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AppMembershipsResponse {\n");
            sb.Append("  AppOrigin: ").Append(AppOrigin).Append("\n");
            sb.Append("  Memberships: ").Append(Memberships).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AppMembershipsResponse);
        }

        /// <summary>
        /// Returns true if AppMembershipsResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of AppMembershipsResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AppMembershipsResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AppOrigin == input.AppOrigin ||
                    (this.AppOrigin != null &&
                    this.AppOrigin.Equals(input.AppOrigin))
                ) && 
                (
                    this.Memberships == input.Memberships ||
                    this.Memberships != null &&
                    input.Memberships != null &&
                    this.Memberships.SequenceEqual(input.Memberships)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AppOrigin != null)
                    hashCode = hashCode * 59 + this.AppOrigin.GetHashCode();
                if (this.Memberships != null)
                    hashCode = hashCode * 59 + this.Memberships.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
