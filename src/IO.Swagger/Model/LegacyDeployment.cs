/* 
 * App Center Client
 *
 * Microsoft Visual Studio App Center API
 *
 * OpenAPI spec version: v0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// LegacyDeployment
    /// </summary>
    [DataContract]
        public partial class LegacyDeployment :  IEquatable<LegacyDeployment>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LegacyDeployment" /> class.
        /// </summary>
        /// <param name="createdTime">Time at which the deployment was created as a Unix timestamp..</param>
        /// <param name="id">The ID of the deployment (internal use only)..</param>
        /// <param name="key">Deployment key (aka Deployment Id).</param>
        /// <param name="name">Updated deployment name (required).</param>
        /// <param name="package">package.</param>
        public LegacyDeployment(int? createdTime = default(int?), string id = default(string), string key = default(string), string name = default(string), LegacyDeploymentsResponsePackage package = default(LegacyDeploymentsResponsePackage))
        {
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new InvalidDataException("name is a required property for LegacyDeployment and cannot be null");
            }
            else
            {
                this.Name = name;
            }
            this.CreatedTime = createdTime;
            this.Id = id;
            this.Key = key;
            this.Package = package;
        }
        
        /// <summary>
        /// Time at which the deployment was created as a Unix timestamp.
        /// </summary>
        /// <value>Time at which the deployment was created as a Unix timestamp.</value>
        [DataMember(Name="createdTime", EmitDefaultValue=false)]
        public int? CreatedTime { get; set; }

        /// <summary>
        /// The ID of the deployment (internal use only).
        /// </summary>
        /// <value>The ID of the deployment (internal use only).</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Deployment key (aka Deployment Id)
        /// </summary>
        /// <value>Deployment key (aka Deployment Id)</value>
        [DataMember(Name="key", EmitDefaultValue=false)]
        public string Key { get; set; }

        /// <summary>
        /// Updated deployment name
        /// </summary>
        /// <value>Updated deployment name</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Package
        /// </summary>
        [DataMember(Name="package", EmitDefaultValue=false)]
        public LegacyDeploymentsResponsePackage Package { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LegacyDeployment {\n");
            sb.Append("  CreatedTime: ").Append(CreatedTime).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Package: ").Append(Package).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LegacyDeployment);
        }

        /// <summary>
        /// Returns true if LegacyDeployment instances are equal
        /// </summary>
        /// <param name="input">Instance of LegacyDeployment to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LegacyDeployment input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CreatedTime == input.CreatedTime ||
                    (this.CreatedTime != null &&
                    this.CreatedTime.Equals(input.CreatedTime))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Key == input.Key ||
                    (this.Key != null &&
                    this.Key.Equals(input.Key))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Package == input.Package ||
                    (this.Package != null &&
                    this.Package.Equals(input.Package))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CreatedTime != null)
                    hashCode = hashCode * 59 + this.CreatedTime.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Key != null)
                    hashCode = hashCode * 59 + this.Key.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Package != null)
                    hashCode = hashCode * 59 + this.Package.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
