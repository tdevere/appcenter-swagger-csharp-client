/* 
 * App Center Client
 *
 * Microsoft Visual Studio App Center API
 *
 * OpenAPI spec version: v0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// TestGDPRFileSetFile
    /// </summary>
    [DataContract]
        public partial class TestGDPRFileSetFile :  IEquatable<TestGDPRFileSetFile>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TestGDPRFileSetFile" /> class.
        /// </summary>
        /// <param name="path">path.</param>
        /// <param name="hashFileId">hashFileId.</param>
        /// <param name="appUploadId">appUploadId.</param>
        /// <param name="hashFileUrl">hashFileUrl.</param>
        public TestGDPRFileSetFile(string path = default(string), Guid? hashFileId = default(Guid?), Guid? appUploadId = default(Guid?), string hashFileUrl = default(string))
        {
            this.Path = path;
            this.HashFileId = hashFileId;
            this.AppUploadId = appUploadId;
            this.HashFileUrl = hashFileUrl;
        }
        
        /// <summary>
        /// Gets or Sets Path
        /// </summary>
        [DataMember(Name="path", EmitDefaultValue=false)]
        public string Path { get; set; }

        /// <summary>
        /// Gets or Sets HashFileId
        /// </summary>
        [DataMember(Name="hash_file_id", EmitDefaultValue=false)]
        public Guid? HashFileId { get; set; }

        /// <summary>
        /// Gets or Sets AppUploadId
        /// </summary>
        [DataMember(Name="app_upload_id", EmitDefaultValue=false)]
        public Guid? AppUploadId { get; set; }

        /// <summary>
        /// Gets or Sets HashFileUrl
        /// </summary>
        [DataMember(Name="hash_file_url", EmitDefaultValue=false)]
        public string HashFileUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TestGDPRFileSetFile {\n");
            sb.Append("  Path: ").Append(Path).Append("\n");
            sb.Append("  HashFileId: ").Append(HashFileId).Append("\n");
            sb.Append("  AppUploadId: ").Append(AppUploadId).Append("\n");
            sb.Append("  HashFileUrl: ").Append(HashFileUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TestGDPRFileSetFile);
        }

        /// <summary>
        /// Returns true if TestGDPRFileSetFile instances are equal
        /// </summary>
        /// <param name="input">Instance of TestGDPRFileSetFile to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TestGDPRFileSetFile input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Path == input.Path ||
                    (this.Path != null &&
                    this.Path.Equals(input.Path))
                ) && 
                (
                    this.HashFileId == input.HashFileId ||
                    (this.HashFileId != null &&
                    this.HashFileId.Equals(input.HashFileId))
                ) && 
                (
                    this.AppUploadId == input.AppUploadId ||
                    (this.AppUploadId != null &&
                    this.AppUploadId.Equals(input.AppUploadId))
                ) && 
                (
                    this.HashFileUrl == input.HashFileUrl ||
                    (this.HashFileUrl != null &&
                    this.HashFileUrl.Equals(input.HashFileUrl))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Path != null)
                    hashCode = hashCode * 59 + this.Path.GetHashCode();
                if (this.HashFileId != null)
                    hashCode = hashCode * 59 + this.HashFileId.GetHashCode();
                if (this.AppUploadId != null)
                    hashCode = hashCode * 59 + this.AppUploadId.GetHashCode();
                if (this.HashFileUrl != null)
                    hashCode = hashCode * 59 + this.HashFileUrl.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
