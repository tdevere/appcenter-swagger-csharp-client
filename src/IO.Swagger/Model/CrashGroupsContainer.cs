/* 
 * App Center Client
 *
 * Microsoft Visual Studio App Center API
 *
 * OpenAPI spec version: v0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// CrashGroupsContainer
    /// </summary>
    [DataContract]
        public partial class CrashGroupsContainer :  IEquatable<CrashGroupsContainer>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CrashGroupsContainer" /> class.
        /// </summary>
        /// <param name="limitedResultSet">limitedResultSet (required).</param>
        /// <param name="continuationToken">Cassandra request continuation token. The token is used for pagination..</param>
        /// <param name="crashGroups">crashGroups (required).</param>
        public CrashGroupsContainer(bool? limitedResultSet = default(bool?), string continuationToken = default(string), List<CrashGroupsContainerCrashGroups> crashGroups = default(List<CrashGroupsContainerCrashGroups>))
        {
            // to ensure "limitedResultSet" is required (not null)
            if (limitedResultSet == null)
            {
                throw new InvalidDataException("limitedResultSet is a required property for CrashGroupsContainer and cannot be null");
            }
            else
            {
                this.LimitedResultSet = limitedResultSet;
            }
            // to ensure "crashGroups" is required (not null)
            if (crashGroups == null)
            {
                throw new InvalidDataException("crashGroups is a required property for CrashGroupsContainer and cannot be null");
            }
            else
            {
                this.CrashGroups = crashGroups;
            }
            this.ContinuationToken = continuationToken;
        }
        
        /// <summary>
        /// Gets or Sets LimitedResultSet
        /// </summary>
        [DataMember(Name="limited_result_set", EmitDefaultValue=false)]
        public bool? LimitedResultSet { get; set; }

        /// <summary>
        /// Cassandra request continuation token. The token is used for pagination.
        /// </summary>
        /// <value>Cassandra request continuation token. The token is used for pagination.</value>
        [DataMember(Name="continuation_token", EmitDefaultValue=false)]
        public string ContinuationToken { get; set; }

        /// <summary>
        /// Gets or Sets CrashGroups
        /// </summary>
        [DataMember(Name="crash_groups", EmitDefaultValue=false)]
        public List<CrashGroupsContainerCrashGroups> CrashGroups { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CrashGroupsContainer {\n");
            sb.Append("  LimitedResultSet: ").Append(LimitedResultSet).Append("\n");
            sb.Append("  ContinuationToken: ").Append(ContinuationToken).Append("\n");
            sb.Append("  CrashGroups: ").Append(CrashGroups).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CrashGroupsContainer);
        }

        /// <summary>
        /// Returns true if CrashGroupsContainer instances are equal
        /// </summary>
        /// <param name="input">Instance of CrashGroupsContainer to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CrashGroupsContainer input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.LimitedResultSet == input.LimitedResultSet ||
                    (this.LimitedResultSet != null &&
                    this.LimitedResultSet.Equals(input.LimitedResultSet))
                ) && 
                (
                    this.ContinuationToken == input.ContinuationToken ||
                    (this.ContinuationToken != null &&
                    this.ContinuationToken.Equals(input.ContinuationToken))
                ) && 
                (
                    this.CrashGroups == input.CrashGroups ||
                    this.CrashGroups != null &&
                    input.CrashGroups != null &&
                    this.CrashGroups.SequenceEqual(input.CrashGroups)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.LimitedResultSet != null)
                    hashCode = hashCode * 59 + this.LimitedResultSet.GetHashCode();
                if (this.ContinuationToken != null)
                    hashCode = hashCode * 59 + this.ContinuationToken.GetHashCode();
                if (this.CrashGroups != null)
                    hashCode = hashCode * 59 + this.CrashGroups.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
